{
    "name": "php-ecma-intl/ext",
    "description": "A PHP implementation of the ECMA-402 11th Edition Internationalization API Specification.",
    "license": "BSD-3-Clause",
    "type": "library",
    "keywords": [
        "ecma402",
        "i18n",
        "icu",
        "internationalization",
        "intl",
        "l10n",
        "localization",
        "unicode"
    ],
    "require": {
        "php": "^8.2"
    },
    "require-dev": {
        "ext-dom": "*",
        "php-ecma-intl/test": "dev-main",
        "ramsey/devtools": "^2.0"
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "autoload-dev": {
        "classmap": [
            "src/php/classes/category.stub.php",
            "src/php/classes/intl.stub.php",
            "src/php/classes/locale.stub.php",
            "src/php/classes/locale_character_direction.stub.php",
            "src/php/classes/locale_options.stub.php",
            "src/php/classes/locale_text_info.stub.php",
            "src/php/classes/locale_week_day.stub.php",
            "src/php/classes/locale_week_info.stub.php"
        ]
    },
    "config": {
        "allow-plugins": {
            "php-http/discovery": true,
            "dealerdirect/phpcodesniffer-composer-installer": true,
            "ramsey/composer-repl": true,
            "phpstan/extension-installer": true,
            "ergebnis/composer-normalize": true,
            "captainhook/plugin-composer": true,
            "ramsey/devtools": true,
            "pestphp/pest-plugin": true
        },
        "sort-packages": true
    },
    "extra": {
        "captainhook": {
            "force-install": true
        },
        "ramsey/conventional-commits": {
            "configFile": "conventional-commits.json"
        },
        "ramsey/devtools": {
            "command-prefix": "dev",
            "commands": {
                "build:clean": {
                    "script": "make clean"
                },
                "lint:all": {
                    "override": true,
                    "script": [
                        "./tools/clang-format.sh"
                    ]
                },
                "lint:fix": {
                    "override": true,
                    "script": "./tools/clang-format.sh apply"
                },
                "lint:style": {
                    "override": true,
                    "script": "./tools/clang-format.sh"
                },
                "test:all": {
                    "override": true,
                    "script": [
                        "@dev:test:phpt",
                        "@dev:test:criterion",
                        "@dev:test:pest"
                    ]
                },
                "test:coverage:html": {
                    "override": true,
                    "script": [
                        "git clean -fX ./build/coverage/.",
                        "@dev:test:criterion",
                        "gcovr --exclude-directories tests --html-nested --html-syntax-highlighting -o build/coverage/index.html"
                    ]
                }
            },
            "memory-limit": "-1"
        }
    },
    "scripts": {
        "build": "@dev:build",
        "dev:build": [
            "make clean || true",
            "phpize",
            "./configure --enable-ecma_intl --enable-criterion",
            "make -j$(nproc) dev"
        ],
        "dev:build:coverage": [
            "make clean || true",
            "phpize",
            "./configure --enable-ecma_intl --enable-criterion --enable-code-coverage",
            "make -j$(nproc) dev"
        ],
        "dev:build:local": [
            "./tools/tool-check",
            "make clean || true",
            "./tools/phpize",
            "PKG_CONFIG_PATH=$(brew --prefix icu4c)/lib/pkgconfig ./configure --enable-ecma_intl --enable-criterion --with-php-config=tools/php-config",
            "make -j$(nproc) dev"
        ],
        "dev:build:local:coverage": [
            "./tools/tool-check",
            "make clean || true",
            "./tools/phpize",
            "PKG_CONFIG_PATH=$(brew --prefix icu4c)/lib/pkgconfig ./configure --enable-ecma_intl --enable-criterion --enable-code-coverage --with-php-config=tools/php-config",
            "make -j$(nproc) dev"
        ],
        "dev:docker:run": [
            "Composer\\Config::disableProcessTimeout",
            "docker compose up -d --build",
            "docker exec -it php-ecma-intl-ext bash || true",
            "docker compose down"
        ],
        "dev:test:criterion": "LC_ALL=C make -j$(nproc) criterion",
        "dev:test:memcheck": "LC_ALL=C USE_ZEND_ALLOC=0 ZEND_DONT_UNLOAD_MODULES=1 php run-tests.php -q -m --show-diff --show-mem --color -n -d extension=\"$PWD/modules/ecma_intl.so\"",
        "dev:test:pest": "LC_ALL=C php -d extension=\"$PWD/modules/ecma_intl.so\" vendor/bin/pest",
        "dev:test:pest:local": [
            "./tools/tool-check",
            "LC_ALL=C ./tools/php -d extension=\"$PWD/modules/ecma_intl.so\" vendor/bin/pest"
        ],
        "dev:test:phpt": "LC_ALL=C php run-tests.php -q --show-diff --color -n -d extension=\"$PWD/modules/ecma_intl.so\"",
        "dev:test:phpt:local": [
            "./tools/tool-check",
            "LC_ALL=C ./tools/php run-tests.php -q --show-diff --color -n -d extension=\"$PWD/modules/ecma_intl.so\""
        ],
        "local": "@dev:build:local",
        "test:local": [
            "@dev:test:phpt:local",
            "@dev:test:criterion",
            "@dev:test:pest:local"
        ]
    },
    "scripts-descriptions": {
        "build": "Alias for dev:build; compiles the extension",
        "dev:build": "Compiles the extension",
        "dev:build:local": "Compiles the extension using php, phpize, and php-config configured in ./tools",
        "dev:docker:run": "Creates, runs, and opens a shell to a container for local development and testing",
        "dev:test:criterion": "Runs Criterion unit tests",
        "dev:test:memcheck": "Runs PHPT tests through Valgrind to check for memory leaks.",
        "dev:test:pest": "Runs Pest tests",
        "dev:test:pest:local": "Runs Pest tests using php, phpize, and php-config configured in ./tools",
        "dev:test:phpt": "Runs PHPT tests",
        "dev:test:phpt:local": "Runs PHPT tests using php, phpize, and php-config configured in ./tools",
        "local": "Alias for dev:build:local",
        "test:local": "Runs all tests using php, phpize, and php-config configured in ./tools"
    }
}
